{{- if not .Values.statefulset.enabled }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "axetrading-api.fullname" . }}
  labels:
    {{- include "axetrading-api.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  {{- if .Values.strategy.type }}
  strategy:
    type: {{ .Values.strategy.type }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "axetrading-api.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "axetrading-api.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "axetrading-api.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      volumes:
      {{- if .Values.secretsStore.enabled }}
      - name: {{ include "axetrading-api.fullname" . }}-secrets-store
        csi:
          driver: secrets-store.csi.k8s.io
          readOnly: true
          volumeAttributes:
            secretProviderClass: {{ include "axetrading-api.fullname" . }}-secrets
      {{- end }}
      {{- if .Values.logFetcher.enabled }}
      - name: {{ include "axetrading-api.fullname" .}}-app-logs
        emptyDir: {}
      {{- end }}
      {{- if .Values.persistence.enabled }}
      - name: {{ include "axetrading-api.fullname" . }}-data
        persistentVolumeClaim:
          claimName: {{ include "axetrading-api.fullname" . }}-pvc
      {{- end }}
      containers:
        - name: {{ include "axetrading-api.fullname" . }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          args : {{ .Values.container_commands.args }}
          env:
          - name: POD_ID
            valueFrom:
              fieldRef:
                fieldPath: metadata.name
          - name: METRIC_PREFIX
            value: {{ .Release.Namespace }}.{{ include "axetrading-api.fullname" . }}
          ## if statsd is enabled, set the env vars
          {{- if .Values.statsd.enabled }}
          - name: STATSD_HOST
            valueFrom:
              fieldRef:
                fieldPath: spec.nodeName
          {{- end }}
          {{-if .Values.serviceMonitor.enabled }}
          - name: ADDITIONAL_JAVA_OPTS
            value: {{ .Values.serviceMonitor.additionalJavaOpts }}
          {{- end }}
          volumeMounts:
           {{- if .Values.secretsStore.enabled }}
            - name: {{ include "axetrading-api.fullname" . }}-secrets-store
              mountPath: /mnt/secrets/
              readOnly: true
           {{- end }}
           {{- if .Values.persistence.enabled }}
            - name: {{ include "axetrading-api.fullname" . }}-data
              mountPath: {{ .Values.persistence.mountPath }}
           {{- end }}
           {{- if .Values.logFetcher.enabled }}
            - name: {{ include "axetrading-api.fullname" .}}-app-logs
              mountPath: {{ .Values.logFetcher.logsPath }}
           {{- end }}
          ports:
            - name: appport
              containerPort: {{ .Values.service.appport }}
              protocol: TCP
            {{- if .Values.service.additionalPorts }}
            {{- range .Values.service.additionalPorts }}
            - name: {{ .name }}
              containerPort: {{ .port }}
              protocol: TCP
            {{- end }}
            {{- end }}
          livenessProbe:
            tcpSocket:
              port: {{ .Values.service.appport }}
            initialDelaySeconds: {{ .Values.initialDelaySeconds}}
            failureThreshold: 3
            periodSeconds: 1
          readinessProbe:
            {{- if .Values.readiness.httpCheck.enabled }}
            httpGet:
              path: {{ .Values.healthcheck.path }}
              port: {{ .Values.service.appport }}
            {{- end }}
            {{- if .Values.readiness.tpcCheck.enabled }}
            tcpSocket:
              port: {{ .Values.service.appport }}
            {{- end }}
            {{- if .Values.readiness.execCmd.enabled }}
            exec:
              command: {{ .Values.healthcheck.execCommands }}
            {{- end }}
            initialDelaySeconds: {{ .Values.initialDelaySeconds }}
            periodSeconds: 1
            timeoutSeconds: 10
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
        {{- if .Values.logFetcher.enabled }}
        - name: {{ include "axetrading-api.fullname" . }}-log-fetcher
          image: {{ .Values.logFetcher.image }}
          imagePullPolicy: {{ .Values.logFetcher.imagePullPolicy }}
          env:
            - name: LOGS_PATH
              value: {{ .Values.logFetcher.logsPath }}
            - name: POD_ID
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: ENVIRONMENT
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
          resources:
            limits:
              memory: "64Mi"
            requests:
              cpu: 100m
              memory: "32Mi"
          volumeMounts:
            - name: {{ include "axetrading-api.fullname" .}}-app-logs
              mountPath: {{ .Values.logFetcher.logsPath }}
        {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
{{- end }}